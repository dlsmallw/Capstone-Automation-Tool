import tkinter as tk
from tkinter import ttk
from components.TkText import FormattedText
class HomeFrame(ttk.Frame):
    def __init__(self, parent):
        super().__init__(parent)
        disclaimer_ft = self.build_disclaimer_panel()
        htu_frame = self.build_how_to_use_panel()
        disclaimer_ft.pack(pady=(65,0))
        htu_frame.pack()


    def build_disclaimer_panel(self):
        ft = FormattedText(self, width=600, borderwidth=2, relief='ridge')
        ft.add_title('DISCLAIMER')
        ft.add_paragraph("This tool has been developed to compile Taiga task data and GitHub commit data to generate reports. While efforts have been made to ensure the tool functions as intended, it is provided as is without any guarantees or warranties, express or implied.")
        ft.add_sub_header('User Responsibility', True)
        ft.add_paragraph("Users are solely responsible for reviewing, verifying, and validating the accuracy and completeness of the reports generated by this tool. The developer makes no representations regarding the reliability or suitability of the tool’s outputs for any particular use.")
        ft.add_sub_header('Liability', True)
        ft.add_paragraph("By using this tool, users acknowledge that the developer is not liable for any errors, omissions, misinterpretations, or consequences resulting from reliance on the tool’s outputs. The developer assumes no responsibility for any decisions, actions, or outcomes based on the use of this tool or the use of any reports generated by the tool.")
        ft.add_section_title("By continuing to use this tool, you agree to these terms.")
        return ft
    
    def build_how_to_use_panel(self):
        def reports_panel(parent_frame):
            ft = FormattedText(parent_frame, width=600)
            ft.add_paragraph("On the Reports tab, users can generate various reports based on the imported Taiga and Commit data:", False)
            ft.make_list([
                "Master Taiga Data Reports",
                "Master Commit Data Reports",
                "Work Summary Reports",
                "Individual Contribution Reports"
            ])
            ft.add_paragraph("When generating a report, the user can then choose to export the report as an excel workbook file and save it to their computer.", False)
            return ft

        def git_panel(parent_frame):
            ft = FormattedText(parent_frame, width=600)
            ft.add_paragraph("Instructions for using the Git Tab for pulling commit data:", False)
            ft.make_list([
                "Users can link either a GitHub or a GitLab account using a token generated from the corresponding site",
                "Once an account is linked, the API will then pull all repositories that the user is a member of (as long as sufficient privileges are provided when creating the token), with which the user can select one or more from to pull commit data from",
                "Once these steps are complete, the user can then import data from the linked repositories"
            ])
            ft.add_paragraph( "To ensure that the application has sufficient privileges to pull private repository data, make sure that the following reading privileges are selected when generating the token:", False)
            ft.make_list([
                "Read access to actions, administration, code, commit statuses and metadata"
            ])
            return ft

        def taiga_panel(parent_frame):
            ft = FormattedText(parent_frame, width=600)
            ft.add_paragraph("Instructions for using the Taiga Tab for pulling taskboard data:", False)
            ft.make_list([
                "Users can link their Taiga accounts by entering their username and password (if you use GitHub to authenticate with Taiga, you can go into your Taiga account settings and add a password that can also be used to authenticate)",
                "Once an account is linked, the API will then pull all projects you are watching/associated with, with which you can select a project to pull taskboard data from",
                "Once these steps are complete and there are no issues with authenticating through the API, you will then be able to import data associated with the project (Sprint, Contributor, User Story, and Task data)"
            ])
            return ft

        how_to_use_frame = ttk.Frame(self, borderwidth=2, relief='ridge')
        how_to_use_lbl = ttk.Label(how_to_use_frame, text='How To Use', font=('Arial', 20, "bold"))
        tabControl = ttk.Notebook(how_to_use_frame)

        taiga_panel = taiga_panel(tabControl)
        git_panel = git_panel(tabControl)
        reports_panel = reports_panel(tabControl)

        tabControl.add(taiga_panel, text='Taiga Tab')
        tabControl.add(git_panel, text='Git Tab')
        tabControl.add(reports_panel, text='Reports Tab')
        how_to_use_lbl.pack(pady=(3, 0))
        tabControl.pack(expand = 1, fill ="both", padx=6) 

        return how_to_use_frame